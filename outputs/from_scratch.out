PyTorch Version:  1.12.1
Torchvision Version:  0.13.1
The selected epochs is: 30
The selected feature_extract is: False
The selected use_pretrained is: False
The selected mode is: from_scratch
The selected device is: cuda:1
VGG(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU(inplace=True)
    (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (7): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU(inplace=True)
    (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): ReLU(inplace=True)
    (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (14): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (18): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (21): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (24): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (25): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): ReLU(inplace=True)
    (27): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (28): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (29): ReLU(inplace=True)
    (30): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (31): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): ReLU(inplace=True)
    (33): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (34): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (35): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): ReLU(inplace=True)
    (37): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (38): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (39): ReLU(inplace=True)
    (40): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (41): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): ReLU(inplace=True)
    (43): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(7, 7))
  (classifier): Sequential(
    (0): Linear(in_features=25088, out_features=4096, bias=True)
    (1): ReLU(inplace=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Linear(in_features=4096, out_features=4096, bias=True)
    (4): ReLU(inplace=True)
    (5): Dropout(p=0.5, inplace=False)
    (6): Linear(in_features=4096, out_features=39, bias=True)
  )
)
Params to learn:
	 features.0.weight
	 features.0.bias
	 features.1.weight
	 features.1.bias
	 features.3.weight
	 features.3.bias
	 features.4.weight
	 features.4.bias
	 features.7.weight
	 features.7.bias
	 features.8.weight
	 features.8.bias
	 features.10.weight
	 features.10.bias
	 features.11.weight
	 features.11.bias
	 features.14.weight
	 features.14.bias
	 features.15.weight
	 features.15.bias
	 features.17.weight
	 features.17.bias
	 features.18.weight
	 features.18.bias
	 features.20.weight
	 features.20.bias
	 features.21.weight
	 features.21.bias
	 features.24.weight
	 features.24.bias
	 features.25.weight
	 features.25.bias
	 features.27.weight
	 features.27.bias
	 features.28.weight
	 features.28.bias
	 features.30.weight
	 features.30.bias
	 features.31.weight
	 features.31.bias
	 features.34.weight
	 features.34.bias
	 features.35.weight
	 features.35.bias
	 features.37.weight
	 features.37.bias
	 features.38.weight
	 features.38.bias
	 features.40.weight
	 features.40.bias
	 features.41.weight
	 features.41.bias
	 classifier.0.weight
	 classifier.0.bias
	 classifier.3.weight
	 classifier.3.bias
	 classifier.6.weight
	 classifier.6.bias
Epoch 0/29
----------
from_scratch ---> train Loss: 1.7399 Acc: 0.3303
from_scratch ---> val Loss: 0.2786 Acc: 0.1191

Epoch 1/29
----------
from_scratch ---> train Loss: 1.1312 Acc: 0.4753
from_scratch ---> val Loss: 0.1744 Acc: 0.1479

Epoch 2/29
----------
from_scratch ---> train Loss: 0.8530 Acc: 0.5492
from_scratch ---> val Loss: 0.1496 Acc: 0.1583

Epoch 3/29
----------
from_scratch ---> train Loss: 0.6961 Acc: 0.5957
from_scratch ---> val Loss: 0.1297 Acc: 0.1647

Epoch 4/29
----------
from_scratch ---> train Loss: 0.5797 Acc: 0.6285
from_scratch ---> val Loss: 0.0966 Acc: 0.1725

Epoch 5/29
----------
from_scratch ---> train Loss: 0.5055 Acc: 0.6495
from_scratch ---> val Loss: 0.0747 Acc: 0.1779

Epoch 6/29
----------
from_scratch ---> train Loss: 0.4419 Acc: 0.6680
from_scratch ---> val Loss: 0.0718 Acc: 0.1784

Epoch 7/29
----------
from_scratch ---> train Loss: 0.3949 Acc: 0.6818
from_scratch ---> val Loss: 0.0729 Acc: 0.1782

Epoch 8/29
----------
from_scratch ---> train Loss: 0.3587 Acc: 0.6920
from_scratch ---> val Loss: 0.0587 Acc: 0.1822

Epoch 9/29
----------
from_scratch ---> train Loss: 0.3276 Acc: 0.7010
from_scratch ---> val Loss: 0.0565 Acc: 0.1835

Epoch 10/29
----------
from_scratch ---> train Loss: 0.3007 Acc: 0.7100
from_scratch ---> val Loss: 0.0476 Acc: 0.1863

Epoch 11/29
----------
from_scratch ---> train Loss: 0.2858 Acc: 0.7145
from_scratch ---> val Loss: 0.0402 Acc: 0.1878

Epoch 12/29
----------
from_scratch ---> train Loss: 0.2700 Acc: 0.7190
from_scratch ---> val Loss: 0.0392 Acc: 0.1884

Epoch 13/29
----------
from_scratch ---> train Loss: 0.2468 Acc: 0.7243
from_scratch ---> val Loss: 0.0384 Acc: 0.1885

Epoch 14/29
----------
from_scratch ---> train Loss: 0.2338 Acc: 0.7284
from_scratch ---> val Loss: 0.0364 Acc: 0.1884

Epoch 15/29
----------
from_scratch ---> train Loss: 0.2247 Acc: 0.7316
from_scratch ---> val Loss: 0.0271 Acc: 0.1919

Epoch 16/29
----------
from_scratch ---> train Loss: 0.2100 Acc: 0.7363
from_scratch ---> val Loss: 0.0305 Acc: 0.1909

Epoch 17/29
----------
from_scratch ---> train Loss: 0.1972 Acc: 0.7399
from_scratch ---> val Loss: 0.0273 Acc: 0.1914

Epoch 18/29
----------
from_scratch ---> train Loss: 0.1861 Acc: 0.7430
from_scratch ---> val Loss: 0.0300 Acc: 0.1908

Epoch 19/29
----------
from_scratch ---> train Loss: 0.1783 Acc: 0.7455
from_scratch ---> val Loss: 0.0310 Acc: 0.1909

Epoch 20/29
----------
from_scratch ---> train Loss: 0.1746 Acc: 0.7464
from_scratch ---> val Loss: 0.0268 Acc: 0.1915

Epoch 21/29
----------
from_scratch ---> train Loss: 0.1719 Acc: 0.7478
from_scratch ---> val Loss: 0.0253 Acc: 0.1922

Epoch 22/29
----------
from_scratch ---> train Loss: 0.1616 Acc: 0.7511
from_scratch ---> val Loss: 0.0273 Acc: 0.1916

Epoch 23/29
----------
from_scratch ---> train Loss: 0.1564 Acc: 0.7518
from_scratch ---> val Loss: 0.0248 Acc: 0.1919

Epoch 24/29
----------
from_scratch ---> train Loss: 0.1498 Acc: 0.7537
from_scratch ---> val Loss: 0.0268 Acc: 0.1919

Epoch 25/29
----------
from_scratch ---> train Loss: 0.1479 Acc: 0.7544
from_scratch ---> val Loss: 0.0259 Acc: 0.1921

Epoch 26/29
----------
from_scratch ---> train Loss: 0.1439 Acc: 0.7567
from_scratch ---> val Loss: 0.0254 Acc: 0.1919

Epoch 27/29
----------
from_scratch ---> train Loss: 0.1362 Acc: 0.7590
from_scratch ---> val Loss: 0.0198 Acc: 0.1939

Epoch 28/29
----------
from_scratch ---> train Loss: 0.1323 Acc: 0.7590
from_scratch ---> val Loss: 0.0231 Acc: 0.1927

Epoch 29/29
----------
from_scratch ---> train Loss: 0.1307 Acc: 0.7598
from_scratch ---> val Loss: 0.0198 Acc: 0.1940

from_scratch ---> Training complete in 394m 31s
from_scratch ---> Best val Acc: 0.193984
############################################## from_scratch ###############################################################
