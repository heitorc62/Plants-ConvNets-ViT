PyTorch Version:  1.12.1
Torchvision Version:  0.13.1
The selected epochs is: 30
The selected feature_extract is: False
The selected use_pretrained is: False
The selected mode is: from_scratch
The selected device is: cuda:1
VGG(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU(inplace=True)
    (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (7): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU(inplace=True)
    (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): ReLU(inplace=True)
    (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (14): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (15): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (18): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (21): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (24): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (25): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): ReLU(inplace=True)
    (27): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (28): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (29): ReLU(inplace=True)
    (30): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (31): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): ReLU(inplace=True)
    (33): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (34): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (35): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): ReLU(inplace=True)
    (37): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (38): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (39): ReLU(inplace=True)
    (40): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (41): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): ReLU(inplace=True)
    (43): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(7, 7))
  (classifier): Sequential(
    (0): Linear(in_features=25088, out_features=4096, bias=True)
    (1): ReLU(inplace=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Linear(in_features=4096, out_features=4096, bias=True)
    (4): ReLU(inplace=True)
    (5): Dropout(p=0.5, inplace=False)
    (6): Linear(in_features=4096, out_features=39, bias=True)
  )
)
Params to learn:
	 features.0.weight
	 features.0.bias
	 features.1.weight
	 features.1.bias
	 features.3.weight
	 features.3.bias
	 features.4.weight
	 features.4.bias
	 features.7.weight
	 features.7.bias
	 features.8.weight
	 features.8.bias
	 features.10.weight
	 features.10.bias
	 features.11.weight
	 features.11.bias
	 features.14.weight
	 features.14.bias
	 features.15.weight
	 features.15.bias
	 features.17.weight
	 features.17.bias
	 features.18.weight
	 features.18.bias
	 features.20.weight
	 features.20.bias
	 features.21.weight
	 features.21.bias
	 features.24.weight
	 features.24.bias
	 features.25.weight
	 features.25.bias
	 features.27.weight
	 features.27.bias
	 features.28.weight
	 features.28.bias
	 features.30.weight
	 features.30.bias
	 features.31.weight
	 features.31.bias
	 features.34.weight
	 features.34.bias
	 features.35.weight
	 features.35.bias
	 features.37.weight
	 features.37.bias
	 features.38.weight
	 features.38.bias
	 features.40.weight
	 features.40.bias
	 features.41.weight
	 features.41.bias
	 classifier.0.weight
	 classifier.0.bias
	 classifier.3.weight
	 classifier.3.bias
	 classifier.6.weight
	 classifier.6.bias
Epoch 0/29
----------
from_scratch ---> train Loss: 2.1510 Acc: 0.4201
from_scratch ---> val Loss: 1.3500 Acc: 0.6170

Epoch 1/29
----------
from_scratch ---> train Loss: 1.4195 Acc: 0.5903
from_scratch ---> val Loss: 1.0218 Acc: 0.7122

Epoch 2/29
----------
from_scratch ---> train Loss: 1.0641 Acc: 0.6840
from_scratch ---> val Loss: 0.6635 Acc: 0.8083

Epoch 3/29
----------
from_scratch ---> train Loss: 0.8529 Acc: 0.7472
from_scratch ---> val Loss: 0.5553 Acc: 0.8328

Epoch 4/29
----------
from_scratch ---> train Loss: 0.7189 Acc: 0.7853
from_scratch ---> val Loss: 0.5457 Acc: 0.8390

Epoch 5/29
----------
from_scratch ---> train Loss: 0.6159 Acc: 0.8130
from_scratch ---> val Loss: 0.4051 Acc: 0.8839

Epoch 6/29
----------
from_scratch ---> train Loss: 0.5373 Acc: 0.8364
from_scratch ---> val Loss: 0.3497 Acc: 0.8969

Epoch 7/29
----------
from_scratch ---> train Loss: 0.4748 Acc: 0.8561
from_scratch ---> val Loss: 0.3199 Acc: 0.9082

Epoch 8/29
----------
from_scratch ---> train Loss: 0.4207 Acc: 0.8725
from_scratch ---> val Loss: 0.2619 Acc: 0.9216

Epoch 9/29
----------
from_scratch ---> train Loss: 0.3834 Acc: 0.8824
from_scratch ---> val Loss: 0.2531 Acc: 0.9274

Epoch 10/29
----------
from_scratch ---> train Loss: 0.3464 Acc: 0.8934
from_scratch ---> val Loss: 0.2399 Acc: 0.9274

Epoch 11/29
----------
from_scratch ---> train Loss: 0.3273 Acc: 0.9004
from_scratch ---> val Loss: 0.2745 Acc: 0.9234

Epoch 12/29
----------
from_scratch ---> train Loss: 0.2959 Acc: 0.9080
from_scratch ---> val Loss: 0.1864 Acc: 0.9474

Epoch 13/29
----------
from_scratch ---> train Loss: 0.2818 Acc: 0.9137
from_scratch ---> val Loss: 0.2164 Acc: 0.9368

Epoch 14/29
----------
from_scratch ---> train Loss: 0.2558 Acc: 0.9217
from_scratch ---> val Loss: 0.2230 Acc: 0.9360

Epoch 15/29
----------
from_scratch ---> train Loss: 0.2450 Acc: 0.9236
from_scratch ---> val Loss: 0.1920 Acc: 0.9480

Epoch 16/29
----------
from_scratch ---> train Loss: 0.2338 Acc: 0.9279
from_scratch ---> val Loss: 0.1651 Acc: 0.9550

Epoch 17/29
----------
from_scratch ---> train Loss: 0.2189 Acc: 0.9321
from_scratch ---> val Loss: 0.1653 Acc: 0.9496

Epoch 18/29
----------
from_scratch ---> train Loss: 0.2131 Acc: 0.9339
from_scratch ---> val Loss: 0.1483 Acc: 0.9592

Epoch 19/29
----------
from_scratch ---> train Loss: 0.2033 Acc: 0.9376
from_scratch ---> val Loss: 0.1436 Acc: 0.9588

Epoch 20/29
----------
from_scratch ---> train Loss: 0.1928 Acc: 0.9406
from_scratch ---> val Loss: 0.1458 Acc: 0.9569

Epoch 21/29
----------
from_scratch ---> train Loss: 0.1819 Acc: 0.9438
from_scratch ---> val Loss: 0.1387 Acc: 0.9606

Epoch 22/29
----------
from_scratch ---> train Loss: 0.1727 Acc: 0.9463
from_scratch ---> val Loss: 0.1299 Acc: 0.9661

Epoch 23/29
----------
from_scratch ---> train Loss: 0.1690 Acc: 0.9465
from_scratch ---> val Loss: 0.1506 Acc: 0.9577

Epoch 24/29
----------
from_scratch ---> train Loss: 0.1605 Acc: 0.9492
from_scratch ---> val Loss: 0.1431 Acc: 0.9596

Epoch 25/29
----------
from_scratch ---> train Loss: 0.1551 Acc: 0.9510
from_scratch ---> val Loss: 0.1240 Acc: 0.9673

Epoch 26/29
----------
from_scratch ---> train Loss: 0.1543 Acc: 0.9517
from_scratch ---> val Loss: 0.1379 Acc: 0.9639

Epoch 27/29
----------
from_scratch ---> train Loss: 0.1473 Acc: 0.9536
from_scratch ---> val Loss: 0.1462 Acc: 0.9641

Epoch 28/29
----------
from_scratch ---> train Loss: 0.1416 Acc: 0.9556
from_scratch ---> val Loss: 0.1650 Acc: 0.9615

Epoch 29/29
----------
from_scratch ---> train Loss: 0.1465 Acc: 0.9551
from_scratch ---> val Loss: 0.1250 Acc: 0.9675

from_scratch ---> Training complete in 1068m 2s
from_scratch ---> Best val Acc: 0.967538
############################################## from_scratch ###############################################################
