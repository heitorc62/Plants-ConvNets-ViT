PyTorch Version:  1.12.1
Torchvision Version:  0.13.1
The selected device is: cuda:0
VGG(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): ReLU(inplace=True)
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): ReLU(inplace=True)
    (11): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): ReLU(inplace=True)
    (14): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (15): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (16): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (17): ReLU(inplace=True)
    (18): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): ReLU(inplace=True)
    (21): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (22): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (23): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): ReLU(inplace=True)
    (25): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): ReLU(inplace=True)
    (28): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(7, 7))
  (classifier): Sequential(
    (0): Linear(in_features=25088, out_features=4096, bias=True)
    (1): ReLU(inplace=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Linear(in_features=4096, out_features=4096, bias=True)
    (4): ReLU(inplace=True)
    (5): Dropout(p=0.5, inplace=False)
    (6): Linear(in_features=4096, out_features=39, bias=True)
  )
)
Params to learn:
	 classifier.6.weight
	 classifier.6.bias
Epoch 0/14
----------
train Loss: 0.9870 Acc: 0.7263
val Loss: 0.4992 Acc: 0.8573

Epoch 1/14
----------
train Loss: 0.7304 Acc: 0.7835
val Loss: 0.4302 Acc: 0.8702

Epoch 2/14
----------
train Loss: 0.6827 Acc: 0.7925
val Loss: 0.3749 Acc: 0.8872

Epoch 3/14
----------
train Loss: 0.6615 Acc: 0.7979
val Loss: 0.3615 Acc: 0.8913

Epoch 4/14
----------
train Loss: 0.6412 Acc: 0.8034
val Loss: 0.3443 Acc: 0.8937

Epoch 5/14
----------
train Loss: 0.6501 Acc: 0.8036
val Loss: 0.3366 Acc: 0.8958

Epoch 6/14
----------
train Loss: 0.6428 Acc: 0.8040
val Loss: 0.3411 Acc: 0.8949

Epoch 7/14
----------
train Loss: 0.6392 Acc: 0.8051
val Loss: 0.3251 Acc: 0.8976

Epoch 8/14
----------
train Loss: 0.6142 Acc: 0.8128
val Loss: 0.3234 Acc: 0.9017

Epoch 9/14
----------
train Loss: 0.6184 Acc: 0.8123
val Loss: 0.3284 Acc: 0.8963

Epoch 10/14
----------
train Loss: 0.6255 Acc: 0.8064
val Loss: 0.3352 Acc: 0.8940

Epoch 11/14
----------
train Loss: 0.6198 Acc: 0.8129
val Loss: 0.3076 Acc: 0.9049

Epoch 12/14
----------
train Loss: 0.6174 Acc: 0.8108
val Loss: 0.3018 Acc: 0.9034

Epoch 13/14
----------
train Loss: 0.6115 Acc: 0.8143
val Loss: 0.3005 Acc: 0.9101

Epoch 14/14
----------
train Loss: 0.6108 Acc: 0.8157
val Loss: 0.3186 Acc: 0.8974

Training complete in 103m 28s
Best val Acc: 0.910099
Traceback (most recent call last):
  File "plantas_conv.py", line 219, in <module>
    np.savetxt("training_history.csv", hist.cpu().numpy(), delimiter=",")
AttributeError: 'list' object has no attribute 'cpu'
